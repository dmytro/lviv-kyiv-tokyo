<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Жорстк╕ диски</TITLE>
<META NAME="description" CONTENT="Жорстк╕ диски">
<META NAME="keywords" CONTENT="linux,ukrainian,guide,sag">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<LINK REL="STYLESHEET" HREF="sag.css">
<LINK REL="next" HREF="node37.html">
<LINK REL="previous" HREF="node35.html">
<LINK REL="up" HREF="node34.html">
<LINK REL="next" HREF="node37.html">
</HEAD>
<BODY BGCOLOR=#FFFFFF>
<!--Navigation Panel-->
<A NAME="tex2html923"
 HREF="node37.html">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next"
 SRC="next_motif.gif"></A> 
<A NAME="tex2html919"
 HREF="node34.html">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up"
 SRC="up_motif.gif"></A> 
<A NAME="tex2html913"
 HREF="node35.html">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous"
 SRC="previous_motif.gif"></A> 
<A NAME="tex2html921"
 HREF="node7.html">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents"
 SRC="contents_motif.gif"></A> 
<A NAME="tex2html922"
 HREF="node120.html">
<IMG WIDTH="43" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="index"
 SRC="index_motif.gif"></A> 
<BR>
<B> Дал╕:</B> <A NAME="tex2html924"
 HREF="node37.html">Гнучк╕ диски</A>
<B> Вгору:</B> <A NAME="tex2html920"
 HREF="node34.html">Використання диск╕в та ╕нших</A>
<B> Назад:</B> <A NAME="tex2html914"
 HREF="node35.html">Два типи пристро╖в</A>
<BR>
<BR>
<!--End of Navigation Panel-->

<H1><A NAME="SECTION00620000000000000000">
Жорстк╕ диски</A>
</H1>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Даний п╕дрозд╕л ознайомить читача з терм╕ноло╜╕╓ю, що ма╓
	в╕дношення до жорстких диск╕в. Якщо Ви вже знайом╕ з терм╕нами
	та концепц╕ями, Ви можете пропустити його. 
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Рисунок&nbsp;<A HREF="node36.html#fig:hd-schematic"><IMG  ALIGN="BOTTOM" BORDER="1" ALT="[*]"
 SRC="cross_ref_motif.gif"></A> показу╓ схематичну д╕а╜раму
	найважлив╕ших частин жорсткого диску. Жорсткий диск
	склада╓ться з одн╕╓╖ або б╕льше циркулярних
	<B>пластин</B><A NAME="tex2html47"
 HREF="footnode.html#foot2361"><SUP>44</SUP></A> на яких одна або обидв╕ <B>поверхн╕</B>
	покрит╕ магн╕тною речовиною, яка ╕ використову╓ться для запису
	даних. Для кожно╖ тако╖ поверхн╕ ╕сну╓ власна
	<B>записуючо-в╕дтворююча головка</B>, яка анал╕зу╓ або зм╕ню╓
	записан╕ на поверхн╕ дан╕. Вс╕ пластини обертаються на
	сп╕льн╕й ос╕, типова швидк╕сть обертання склада╓ 3600 оберт╕в
	на хвилину, але диски з вищою виробничою потужн╕стю мають вищ╕
	швидкост╕. Головки можуть пересуватися вздовж рад╕уса пластин,
	╕ цей рух, по╓днаний з обертанням пластин, да╓ головкам
	можлив╕сть доступу до будь-яко╖ частини диску.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Процесор (CPU) ╕ реальний диск сп╕лкуються через
	<B>дисковий контролер</B>. Це зв╕льню╓ вс╕ ╕нш╕ частини
	комп'ютера в╕д необх╕дност╕ знати, як саме користуватися тим
	чи ╕ншим диском, бо дисков╕ контролери можуть виготовлятися
	таким чином, щоб мати один ╕ той-же ╕нтерфейс до
	комп'ютера. Коротше кажучи, комп'ютер просто може сказати
	``гей, дисче, дай мен╕ те, що я хочу'', зам╕сть того, щоб
	передавати довг╕ посл╕довност╕ електричних сигнал╕в т╕льки щоб
	посунути головку у в╕дпов╕дне положення ╕ чекати п╕сля цього,
	щоб потр╕бне м╕сце диску попало п╕д читаючу
	головку. Насправд╕, ╕нтерфейс до дискового контролера все ще
	досить складна штука, але все-таки набагато прост╕ше, н╕ж в╕н
	м╕г би бути. Кр╕м того, контролер може робити деяк╕ ╕нш╕ реч╕,
	так╕, як кешування або автоматичну зам╕ну дефектних сектор╕в.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Наведен╕ вище дан╕, практично все, що необх╕дно знати
	середньо-перес╕чному користувачев╕ про обладнання. Кр╕м
	згаданого ╓ ще ц╕ла в'язка вс╕ляких ╕нших причандаль, таких,
	як двигун, що оберта╓ пластини, електронн╕ штучки, як╕ керують
	роботою механ╕чних частин, але все це не ма╓ в╕дношення до
	розум╕ння принцип╕в роботи жорстких диск╕в.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Магн╕тн╕ поверхн╕, як звичайно, розд╕лен╕ на концентричн╕
	к╕льця, що носять назву <B>дор╕жок</B>, а ц╕ в свою чергу
	под╕лен╕ на <B>сектори</B>. Такий под╕л використову╓ться для
	визначення положення на поверхн╕ жорсткого диску та для
	вид╕лення в╕льного простору для файл╕в. Щоб визначити потр╕бне
	м╕сце на диску звичайно кажуть ``поверхня 3, дор╕жка 5, сектор
	7''. Найчаст╕ше число сектор╕в ╓ сталим для вс╕х дор╕жок на
	диску, але деяк╕ диски прид╕ляють б╕льше сектор╕в на зовн╕шн╕
	дор╕жки (вс╕ сектори будуть мати в такому випадку однаковий
	ф╕зичний розм╕р, а, отже, б╕льше сектор╕в пом╕ститься на
	ближчих до зовн╕шнього периметру дор╕жках). Типовий сектор ма╓
	512&nbsp;байт даних. Диск сам по соб╕ не може оперувати об'╓мами
	даних меншими, н╕ж розм╕р сектора.
</FONT></FONT>
<P>
<BR>
<DIV ALIGN="CENTER"><A NAME="fig:hd-schematic">&#160;</A><A NAME="2371">&#160;</A>
<TABLE WIDTH="50%">
<CAPTION><STRONG>Рисунок:</STRONG>
Схематичне зображення основних частин жорсткого диску.</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">

<!-- MATH: $\includegraphics{disks/hd-schematic.ps}$ -->
<IMG
  ALIGN="BOTTOM" BORDER="0"
 SRC="img5.gif"
 ALT="\includegraphics{disks/hd-schematic.ps}"></DIV></TD></TR>
</TABLE>
</DIV>
<BR>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Кожна поверхня диску розд╕лена на дор╕жки (╕ сектори) так
	само, як ╕ ╕нш╕. Це означа╓ те, що, якщо головка на одн╕й з
	поверхонь знаходиться над певною дор╕жкою, то головки на вс╕х
	╕нших магн╕тних поверхнях знаходяться над такою ж
	поверхнею. Вс╕ в╕дпов╕дн╕ дор╕жки разом взят╕ називають
	<B>цил╕ндром</B>. Пересування головок з одн╕╓╖ дор╕жки
	(цил╕ндру) до ╕ншо╖ займа╓ певний час. Отже, дан╕ краще
	розташувати таким чином, щоб дан╕, до яких доступ повинен
	виконуватися одночасно (наприклад, файл), розташовувалися в
	одному ╕ тому ж цил╕ндр╕. В такому раз╕ в╕дпада╓ необх╕дн╕сть
	пересування головок при доступ╕ до цих даних ╕, отже, це
	п╕двищу╓ швидк╕сть роботи. Не завжди виявля╓ться можливим
	розташувати файли таким чином, ╕ файли, як╕ виявляються
	записаними розкиданими по к╕лькох р╕зних ф╕зичних розд╕лах
	диску носять назву <B>фрагментованих</B>.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Число поверхонь, або головок (що, по сут╕, ╓ одним ╕ тим же),
	цил╕ндр╕в та сектор╕в сутт╓во в╕др╕зняються<A NAME="tex2html48"
 HREF="footnode.html#foot2936"><SUP>45</SUP></A>. Сукупн╕сть вс╕х цих параметр╕в називають
	<B>геометр╕╓ю</B> жорсткого диску. Геометр╕я диску часто
	запису╓ться в спец╕альн╕й пам'ят╕, що живиться в╕д батарейки,
	╕ носить назву <B>CMOS RAM</B><A NAME="tex2html49"
 HREF="footnode.html#foot2943"><SUP>46</SUP></A>. З ц╕╓╖ пам'ят╕ операц╕йна система д╕зна╓ться про диск п╕д
	час старту системи або драйвер╕в.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">На жаль BIOS<A NAME="tex2html50"
 HREF="footnode.html#foot2380"><SUP>47</SUP></A><A NAME="tex2html51"
 HREF="footnode.html#foot2948"><SUP>48</SUP></A> ма╓ певн╕ обмеження закладен╕
	при проектуванн╕, через як╕ виявля╓ться неможливим звертатися
	до дор╕жок, номер яких б╕льший за 1024 (тобто вказувати цей
	номер в CMOS RAM), що ╓ занадто малим для сучасних жорстких
	диск╕в. Щоб перейти через цю межу контролер придурю╓ться, що
	в╕н не зна╓ справжньо╖ геометр╕╖ диску ╕ <B>переводить
	адреси</B>, запрошен╕ ком'ютером в так╕, як╕ б╕льше п╕дходять до
	рельно╖ ситуац╕╖. Наприклад, жорсткий диск може мати 8
	головок, 2048 дор╕жок ╕ 35 сектор╕в<A NAME="tex2html52"
 HREF="footnode.html#foot2383"><SUP>49</SUP></A>. Його контролер може дурити комп'ютер, що в╕н ма╓ 16
	головок, 1024 дор╕жки ╕ 35 сектор╕в на дор╕жку, не перевищуючи
	таким чином верньо╖ дозволено╖ меж╕ дор╕жок ╕ обчислю╓
	справжн╕ адреси на диску виводячи ╖х з тих, що надаються йому
	комп'ютером. Насправд╕ математика позаду такого обчислення
	може бути значно складн╕шою, бо числа можуть бути не такими
	гарними та гладенькими, як в наведеному приклад╕ (але, знову ж
	таки, це не ма╓ в╕дношення до загального розум╕ння принципу
	роботи). Таке переформування ф╕зичних адрес викривлю╓ уявлення
	системи про справжню орган╕зац╕ю диск╕в ╕ робить
	безперспективними спроби оптим╕зац╕╖ швидкост╕ доступу за
	рахунок розташування даних в межах одного цил╕ндру.
	
	Ц╕ проблеми переобчислення адрес стосуються т╕льки IDE
	диск╕в. SCSI диски використовують посл╕довн╕ номери сектор╕в
	(тобто, контролер переводить посл╕довний номер сектора в
	триплет "головка-цил╕ндр-сектор") ╕ зовс╕м ╕нший метод для
	сп╕лкування з процесором, отже вони повн╕стю ╕зольован╕ в╕д
	описано╖ проблеми. В╕дм╕тьте, однак, що ╕ у випадку ╕з SCSI
	дисками комп'ютер також може не знати справжньо╖ геометр╕╖
	диску.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Через те, що Л╕накс часто не ма╓ ╕ найменшого поняття про
	справжню геометр╕ю диску, в╕н нав╕ть ╕ не дума╓ пом╕стити
	як╕сь дан╕ в межах одного цил╕ндру. Зам╕сть цього в╕н
	намага╓ться приписати кожному файлу посл╕довн╕ сектори, ╕ це в
	результат╕ да╓ приблизно такий же виграш в час╕. Ця проблема
	нав╕ть б╕льше ускладню╓ться кешами контролера диск╕в та
	автоматичним "читанням наперед"<A NAME="tex2html53"
 HREF="footnode.html#foot2954"><SUP>50</SUP></A> контролера.
</FONT></FONT>
<P>
<FONT SIZE="+1"><FONT SIZE="+1">Кожен жорсткий диск ма╓ св╕й власний спец╕альний файл. Загалом
	може бути два або чотири жорстких диски IDE в систем╕. Вони
	в╕дом╕ п╕д назвою <TT>/dev/hda</TT><A NAME="2960">&#160;</A>, <TT>/dev/hdb</TT><A NAME="2962">&#160;</A>, <TT>/dev/hdc</TT><A NAME="2964">&#160;</A>
	та <TT>/dev/hdd</TT><A NAME="2966">&#160;</A>. SCSI диски мають назви <TT>/dev/sda</TT><A NAME="2968">&#160;</A>,
	<TT>/dev/sdb</TT><A NAME="2970">&#160;</A> ╕ т.д. В╕дпов╕дн╕ домовленост╕ щодо назв диск╕в
	╕снують також для ╕нших тип╕в пристро╖в. Детальн╕ дан╕ про
	типи пристро╖в маються в&nbsp;<a href="node119.html#device-list">          Linux Device List</a>. Майте на уваз╕,
	що спец╕альн╕ файли для ц╕лих диск╕в мають доступ до диск╕в
	ц╕лком, не звертаючи уваги на розд╕ли диск╕в (про це йдеться
	дал╕), ╕ при цьому виявля╓ться надзвичайно легко наробити лиха
	з ус╕ма розд╕лами, якщо не бути уважним. Спец╕альн╕ файли
	диск╕в част╕ше всього використовуються, щоб отримати доступ до
	MBR <A NAME="tex2html54"
 HREF="footnode.html#foot2971"><SUP>51</SUP></A>
	(що теж буде обговорюватися дал╕).
</FONT></FONT>
<P>
<BR><HR>
<ADDRESS>
<I>Dmytro Kovalev</I>
<BR><I>1999-06-10</I>
</ADDRESS>
</BODY>
</HTML>
